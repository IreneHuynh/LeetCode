
Question 105: Construct Binary Tree from Preorder and Inorder Traversal

We are just constructing a tree from an array and the easiest way is to use the preorder array. Following the BT rules we just continue the structure
var buildTree = function(preorder, inorder) {
    
    let recursion = function(start, end){
        if(start>end) return null;
        
        let val = preorder.shift();
        let root = new TreeNode(val);
        root.left = recursion(start, inorder.indexOf(val)-1);
        root.right = recursion(inorder.indexOf(val)+1, end);
        
        return root;
    }
    
    return recursion(0, inorder.length-1);
};

Question 152: MaximumProduct Subarray

const maxProduct = (nums) => {
    if (nums.length < 1) return nums[0]
    let currentMax = nums[0]
    let currentMin = nums[0]
    let totalMax = nums[0]
    for (let i = 1; i < nums.length; i++) {
        if (nums[i] < 0) {
		    // swap because negative * negative = positive
            let temp = currentMax
            currentMax = currentMin
            currentMin = temp
        } 
        currentMax = Math.max(nums[i], nums[i] * currentMax)
        currentMin = Math.min(nums[i], nums[i] * currentMin)
        totalMax = Math.max(currentMax, totalMax)
    }
    return totalMax
};
