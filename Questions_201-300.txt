
Question 278: First Bad Version------------------------------------------------------------------------------------------------------Question 278: First Bad Version

Optimal Solution:
Here I am using the bisect right algorith for searching! Since we are return the element to the right of the bad version.

var solution = function(isBadVersion) {
    /**
     * @param {integer} n Total versions
     * @return {integer} The first bad version
     */
    return function(n){
    
    let lo = 1;
    let hi = n;
    let mid = null

    while (lo <= hi){
        let mid = Math.floor((lo + hi)/2);
        if(isBadVersion(mid) ){
            bad = mid
            hi = mid - 1;
        } else {
            lo = mid + 1;
        }
        
    }
        return bad;
  }
}

